<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jonsan.server.mapper.SecretKeyMapper">
    
    <resultMap type="SecretKey" id="SecretKeyResult">
        <result property="keyId"    column="key_id"    />
        <result property="modelId"    column="model_id"    />
        <result property="keyName"    column="key_name"    />
        <result property="keyValue"    column="key_value"    />
        <result property="description"    column="description"    />
        <result property="status"    column="status"    />
        <result property="isDefault"    column="is_default"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSecretKeyVo">
        select key_id, model_id, key_name, key_value, description, status, is_default, create_time, update_time from boog_ai_secret_key
    </sql>

    <select id="selectSecretKeyList" parameterType="SecretKey" resultMap="SecretKeyResult">
        <include refid="selectSecretKeyVo"/>
        <where>  
            <if test="modelId != null "> and model_id = #{modelId}</if>
            <if test="keyName != null  and keyName != ''"> and key_name like concat('%', #{keyName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="isDefault != null  and isDefault != ''"> and is_default = #{isDefault}</if>
            <if test="createTime != null "> and create_time = #{createTime}</if>
        </where>
    </select>
    
    <select id="selectSecretKeyByKeyId" parameterType="Long" resultMap="SecretKeyResult">
        <include refid="selectSecretKeyVo"/>
        where key_id = #{keyId}
    </select>

    <insert id="insertSecretKey" parameterType="SecretKey" useGeneratedKeys="true" keyProperty="keyId">
        insert into boog_ai_secret_key
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="modelId != null">model_id,</if>
            <if test="keyName != null and keyName != ''">key_name,</if>
            <if test="keyValue != null and keyValue != ''">key_value,</if>
            <if test="description != null">description,</if>
            <if test="status != null">status,</if>
            <if test="isDefault != null">is_default,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="modelId != null">#{modelId},</if>
            <if test="keyName != null and keyName != ''">#{keyName},</if>
            <if test="keyValue != null and keyValue != ''">#{keyValue},</if>
            <if test="description != null">#{description},</if>
            <if test="status != null">#{status},</if>
            <if test="isDefault != null">#{isDefault},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSecretKey" parameterType="SecretKey">
        update boog_ai_secret_key
        <trim prefix="SET" suffixOverrides=",">
            <if test="modelId != null">model_id = #{modelId},</if>
            <if test="keyName != null and keyName != ''">key_name = #{keyName},</if>
            <if test="keyValue != null and keyValue != ''">key_value = #{keyValue},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="isDefault != null">is_default = #{isDefault},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where key_id = #{keyId}
    </update>

    <delete id="deleteSecretKeyByKeyId" parameterType="Long">
        delete from boog_ai_secret_key where key_id = #{keyId}
    </delete>

    <delete id="deleteSecretKeyByKeyIds" parameterType="String">
        delete from boog_ai_secret_key where key_id in 
        <foreach item="keyId" collection="array" open="(" separator="," close=")">
            #{keyId}
        </foreach>
    </delete>
</mapper>